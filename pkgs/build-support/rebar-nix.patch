diff --git a/ebin/rebar.app b/ebin/rebar.app
index 6e3609b..218b832 100644
--- a/ebin/rebar.app
+++ b/ebin/rebar.app
@@ -26,6 +26,7 @@
               rebar_lfe_compiler,
               rebar_log,
               rebar_neotoma_compiler,
+              rebar_nix,
               rebar_otp_app,
               rebar_port_compiler,
               rebar_proto_compiler,
diff --git a/src/rebar_deps.erl b/src/rebar_deps.erl
index 952276c..7d7bded 100644
--- a/src/rebar_deps.erl
+++ b/src/rebar_deps.erl
@@ -377,7 +377,10 @@ find_dep(Config, Dep) ->
     %% e.g. {git, "https://github.com/mochi/mochiweb.git", "HEAD"}
     %% Deps with a source must be found (or fetched) locally.
     %% Those without a source may be satisfied from lib dir (get_lib_dir).
-    find_dep(Config, Dep, Dep#dep.source).
+    case lists:keyfind(Dep#dep.app, 1, rebar_nix:get_depmap()) of
+        {_, Path} -> {Config, {avail, Path}};
+        false     -> find_dep(Config, Dep, Dep#dep.source)
+    end.
 
 find_dep(Config, Dep, undefined) ->
     %% 'source' is undefined.  If Dep is not satisfied locally,
diff --git a/src/rebar_erlc_compiler.erl b/src/rebar_erlc_compiler.erl
index e4abd3d..1fee5a7 100644
--- a/src/rebar_erlc_compiler.erl
+++ b/src/rebar_erlc_compiler.erl
@@ -748,9 +748,12 @@ maybe_expand_include_lib_path(File) ->
 expand_include_lib_path(File) ->
     File1 = filename:basename(File),
     Split = filename:split(filename:dirname(File)),
-    Lib = hd(Split),
+    Lib = list_to_atom(hd(Split)),
     SubDir = filename:join(tl(Split)),
-    Dir = code:lib_dir(list_to_atom(Lib), list_to_atom(SubDir)),
+    Dir = case lists:keyfind(Lib, 1, rebar_nix:get_depmap()) of
+        {_, StorePath} -> filename:join(StorePath, SubDir);
+        false -> code:lib_dir(Lib, list_to_atom(SubDir))
+    end,
     filename:join(Dir, File1).
 
 %%
diff --git a/src/rebar_nix.erl b/src/rebar_nix.erl
index e69de29..6d46da3 100644
--- a/src/rebar_nix.erl
+++ b/src/rebar_nix.erl
@@ -0,0 +1,19 @@
+-module(rebar_nix).
+
+-export([get_depmap/0]).
+
+-spec get_depmap(string()) -> [{atom(), string()}].
+get_depmap(DepMap) ->
+    SplitFun = fun($=) -> false; (_) -> true end,
+    MapFun = fun(S) ->
+        {Dep, [_|Path]} = lists:splitwith(SplitFun, S),
+        {list_to_atom(Dep), Path}
+    end,
+    lists:map(MapFun, string:tokens(DepMap, ":")).
+
+-spec get_depmap() -> [{atom(), string()}].
+get_depmap() ->
+    case os:getenv("NIX_ERLANG_DEPENDENCIES") of
+        false  -> [];
+        DepMap -> get_depmap(DepMap)
+    end.
